CREATE TABLE IF NOT EXISTS repository (	repository_id INT NOT NULL PRIMARY KEY AUTO_INCREMENT,name VARCHAR(30) NOT NULL,description VARCHAR(100) NOT NULL,url VARCHAR(200) NOT NULL);
CREATE TABLE IF NOT EXISTS branch (	branch_id INT PRIMARY KEY AUTO_INCREMENT,repository_id INT(100) NOT NULL,name VARCHAR(30) NOT NULL,description VARCHAR(100) NOT NULL,foreign key(repository_id) references repository(repository_id) );
CREATE TABLE IF NOT EXISTS git_commit (	branch_id INT NOT NULL,commit_id INT PRIMARY KEY AUTO_INCREMENT,hash_val VARCHAR(100) NOT NULL,commit_time DATETIME NOT NULL,committer VARCHAR(50) NOT NULL,foreign key(branch_id) references branch(branch_id), INDEX commit_index_on_time (commit_time));
CREATE TABLE IF NOT EXISTS issue_case (	issue_case_id INT PRIMARY KEY AUTO_INCREMENT,appear_commit_id INT,solve_commit_id INT,case_status ENUM ('SOLVED','UNSOLVED'),type ENUM ('BUG','SMELL','VULN','SECHOT'),appear_time DATETIME,appear_committer VARCHAR(50),solve_time DATETIME,solve_committer VARCHAR(50),foreign key(appear_commit_id) references git_commit(commit_id),foreign key(solve_commit_id) references git_commit(commit_id), INDEX case_index_on_appear_id (appear_commit_id), INDEX case_index_on_solve_id (solve_commit_id));
CREATE TABLE IF NOT EXISTS issue_instance (	issue_instance_id INT PRIMARY KEY AUTO_INCREMENT,issue_case_id INT,commit_id INT(20),instance_status ENUM ('APPEAR','UPDATE','DISAPPEAR'),file_path VARCHAR(200) NOT NULL,message VARCHAR(300),foreign key(issue_case_id) references issue_case(issue_case_id), INDEX instance_index_on_commit_id (commit_id)  );
CREATE TABLE IF NOT EXISTS issue_location (	issue_instance_id INT,sequence INT,start_line INT NOT NULL,end_line INT NOT NULL,primary key(issue_instance_id,sequence),foreign key(issue_instance_id) references issue_instance(issue_instance_id) );
